
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSAND ANDEQUAL COMMA DIVEQUAL DIVIDE ECHO EQ EQUALS FOR FUNCTION GE GT LAND LBRACKET LE LOR LPAREN LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MOD MODEQUAL NAME NE NUMBER OR OREQUAL PLUS PLUSEQUAL RBRACKET RPAREN RSHIFT RSHIFTEQUAL SEMICOLON SHARP STRING THEN TIMES TIMESEQUAL WHILE XOR XOREQUALprogram : program block\n             | blockblock : block statement\n             | statementempty :statement : SHARP NAME expressionstatement : ECHO expression SEMICOLONstatement : WHILE expression THEN blockstatement : FOR statement SEMICOLON expression THEN blockparameters_declaration : empty\n                              | NAME COMMA parameters_declaration\n                              | NAMEparameters_execution : empty\n                              | expression COMMA parameters_execution\n                              | expressionstatement : FUNCTION NAME LBRACKET parameters_declaration RBRACKET blockstatement : NAME LBRACKET parameters_execution RBRACKET SEMICOLONstatement : expression SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression OR expression\n                  | expression AND expression\n                  | expression XOR expression\n                  | expression LSHIFT expression\n                  | expression RSHIFT expression\n                  | expression LOR expression\n                  | expression LAND expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression EQ expression\n                  | expression NE expressionstatement : NAME EQUALS expression SEMICOLON\n                 | NAME TIMESEQUAL expression SEMICOLON\n                 | NAME DIVEQUAL expression SEMICOLON\n                 | NAME MODEQUAL expression SEMICOLON\n                 | NAME PLUSEQUAL expression SEMICOLON\n                 | NAME MINUSEQUAL expression SEMICOLON\n                 | NAME LSHIFTEQUAL expression SEMICOLON\n                 | NAME RSHIFTEQUAL expression SEMICOLON\n                 | NAME ANDEQUAL expression SEMICOLON\n                 | NAME OREQUAL expression SEMICOLON\n                 | NAME XOREQUAL expression SEMICOLONexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : STRINGexpression : NAME'
    
_lr_action_items = {'SHARP':([0,1,2,3,9,13,14,15,16,30,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,107,112,114,116,117,119,],[4,4,4,-4,4,-50,-51,4,-3,-18,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,4,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,4,-17,4,4,4,4,]),'ECHO':([0,1,2,3,9,13,14,15,16,30,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,107,112,114,116,117,119,],[7,7,7,-4,7,-50,-51,7,-3,-18,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,7,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,7,-17,7,7,7,7,]),'WHILE':([0,1,2,3,9,13,14,15,16,30,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,107,112,114,116,117,119,],[8,8,8,-4,8,-50,-51,8,-3,-18,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,8,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,8,-17,8,8,8,8,]),'FOR':([0,1,2,3,9,13,14,15,16,30,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,107,112,114,116,117,119,],[9,9,9,-4,9,-50,-51,9,-3,-18,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,9,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,9,-17,9,9,9,9,]),'FUNCTION':([0,1,2,3,9,13,14,15,16,30,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,101,102,103,104,105,106,107,112,114,116,117,119,],[10,10,10,-4,10,-50,-51,10,-3,-18,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,10,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,10,-17,10,10,10,10,]),'NAME':([0,1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,112,114,115,116,117,119,],[5,5,5,-4,17,50,50,5,53,50,50,-50,-51,5,-3,50,50,50,50,50,50,50,50,50,50,50,50,50,-18,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,5,50,109,-49,50,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,5,-17,5,109,5,5,5,]),'MINUS':([0,1,2,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,114,116,117,119,],[11,11,11,-4,-52,32,11,11,11,11,11,-50,-51,11,-3,11,11,11,11,11,11,11,11,11,11,11,11,11,-18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,32,-52,32,-48,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-19,-20,-21,-22,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-7,11,11,-49,11,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,11,32,-17,11,11,11,11,]),'LPAREN':([0,1,2,3,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,112,114,116,117,119,],[12,12,12,-4,12,12,12,12,12,-50,-51,12,-3,12,12,12,12,12,12,12,12,12,12,12,12,12,-18,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,12,12,-49,12,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,12,-17,12,12,12,12,]),'NUMBER':([0,1,2,3,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,112,114,116,117,119,],[13,13,13,-4,13,13,13,13,13,-50,-51,13,-3,13,13,13,13,13,13,13,13,13,13,13,13,13,-18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,13,13,-49,13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,13,-17,13,13,13,13,]),'STRING':([0,1,2,3,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,112,114,116,117,119,],[14,14,14,-4,14,14,14,14,14,-50,-51,14,-3,14,14,14,14,14,14,14,14,14,14,14,14,14,-18,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,14,14,-49,14,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,14,-17,14,14,14,14,]),'$end':([1,2,3,13,14,15,16,30,50,54,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,97,98,99,100,101,102,103,104,105,106,107,112,117,119,],[0,-2,-4,-50,-51,-1,-3,-18,-52,-48,-6,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-8,-17,-9,-16,]),'SEMICOLON':([3,5,6,13,14,16,30,49,50,52,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,99,100,101,102,103,104,105,106,107,112,117,119,],[-4,-52,30,-50,-51,-3,-18,89,-52,91,-48,-6,96,97,98,99,100,101,102,103,104,105,106,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,-49,112,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-8,-17,-9,-16,]),'LBRACKET':([5,53,],[18,92,]),'EQUALS':([5,],[19,]),'TIMESEQUAL':([5,],[20,]),'DIVEQUAL':([5,],[21,]),'MODEQUAL':([5,],[22,]),'PLUSEQUAL':([5,],[23,]),'MINUSEQUAL':([5,],[24,]),'LSHIFTEQUAL':([5,],[25,]),'RSHIFTEQUAL':([5,],[26,]),'ANDEQUAL':([5,],[27,]),'OREQUAL':([5,],[28,]),'XOREQUAL':([5,],[29,]),'PLUS':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,31,-50,-51,31,-52,31,-48,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-19,-20,-21,-22,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-49,31,]),'TIMES':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,33,-50,-51,33,-52,33,-48,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-21,-22,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-49,33,]),'DIVIDE':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,34,-50,-51,34,-52,34,-48,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-21,-22,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-49,34,]),'MOD':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,35,-50,-51,35,-52,35,-48,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-19,-20,-21,-22,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-49,35,]),'OR':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,36,-50,-51,36,-52,36,-48,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-19,-20,-21,-22,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-49,36,]),'AND':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,37,-50,-51,37,-52,37,-48,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-19,-20,-21,-22,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-49,37,]),'XOR':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,38,-50,-51,38,-52,38,-48,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-19,-20,-21,-22,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-49,38,]),'LSHIFT':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,39,-50,-51,39,-52,39,-48,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-19,-20,-21,-22,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-49,39,]),'RSHIFT':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,40,-50,-51,40,-52,40,-48,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-19,-20,-21,-22,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-49,40,]),'LOR':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,41,-50,-51,41,-52,41,-48,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-19,-20,-21,-22,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-49,41,]),'LAND':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,42,-50,-51,42,-52,42,-48,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-19,-20,-21,-22,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-49,42,]),'LT':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,43,-50,-51,43,-52,43,-48,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-19,-20,-21,-22,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-49,43,]),'LE':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,44,-50,-51,44,-52,44,-48,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-19,-20,-21,-22,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-49,44,]),'GT':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,45,-50,-51,45,-52,45,-48,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-19,-20,-21,-22,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-49,45,]),'GE':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,46,-50,-51,46,-52,46,-48,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-19,-20,-21,-22,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-49,46,]),'EQ':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,47,-50,-51,47,-52,47,-48,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-19,-20,-21,-22,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-49,47,]),'NE':([5,6,13,14,49,50,51,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-52,48,-50,-51,48,-52,48,-48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-19,-20,-21,-22,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-49,48,]),'THEN':([13,14,50,51,54,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,108,],[-50,-51,-52,90,-48,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-49,114,]),'RPAREN':([13,14,50,54,55,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,],[-50,-51,-52,-48,93,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-49,]),'COMMA':([13,14,50,54,59,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,109,],[-50,-51,-52,-48,95,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-49,115,]),'RBRACKET':([13,14,18,50,54,57,58,59,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,109,110,111,113,115,118,],[-50,-51,-5,-52,-48,94,-13,-15,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-5,-49,-5,-12,116,-10,-14,-5,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,1,90,114,116,],[2,15,107,117,119,]),'statement':([0,1,2,9,15,90,107,114,116,117,119,],[3,3,16,52,16,3,16,3,3,16,16,]),'expression':([0,1,2,7,8,9,11,12,15,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,91,95,107,114,116,117,119,],[6,6,6,49,51,6,54,55,6,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,6,108,59,6,6,6,6,6,]),'parameters_execution':([18,95,],[57,113,]),'empty':([18,92,95,115,],[58,111,58,111,]),'parameters_declaration':([92,115,],[110,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program block','program',2,'p_program','calc.py',323),
  ('program -> block','program',1,'p_program','calc.py',324),
  ('block -> block statement','block',2,'p_block','calc.py',331),
  ('block -> statement','block',1,'p_block','calc.py',332),
  ('empty -> <empty>','empty',0,'p_empty','calc.py',341),
  ('statement -> SHARP NAME expression','statement',3,'p_preprocessor','calc.py',346),
  ('statement -> ECHO expression SEMICOLON','statement',3,'p_statement_echo','calc.py',351),
  ('statement -> WHILE expression THEN block','statement',4,'p_statement_while','calc.py',356),
  ('statement -> FOR statement SEMICOLON expression THEN block','statement',6,'p_statement_for','calc.py',361),
  ('parameters_declaration -> empty','parameters_declaration',1,'p_parameters_declaration','calc.py',368),
  ('parameters_declaration -> NAME COMMA parameters_declaration','parameters_declaration',3,'p_parameters_declaration','calc.py',369),
  ('parameters_declaration -> NAME','parameters_declaration',1,'p_parameters_declaration','calc.py',370),
  ('parameters_execution -> empty','parameters_execution',1,'p_parameters_execution','calc.py',381),
  ('parameters_execution -> expression COMMA parameters_execution','parameters_execution',3,'p_parameters_execution','calc.py',382),
  ('parameters_execution -> expression','parameters_execution',1,'p_parameters_execution','calc.py',383),
  ('statement -> FUNCTION NAME LBRACKET parameters_declaration RBRACKET block','statement',6,'p_statement_function_declaration','calc.py',394),
  ('statement -> NAME LBRACKET parameters_execution RBRACKET SEMICOLON','statement',5,'p_statement_function_execution','calc.py',399),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','calc.py',404),
  ('expression -> expression PLUS expression','expression',3,'p_expression','calc.py',409),
  ('expression -> expression MINUS expression','expression',3,'p_expression','calc.py',410),
  ('expression -> expression TIMES expression','expression',3,'p_expression','calc.py',411),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','calc.py',412),
  ('expression -> expression MOD expression','expression',3,'p_expression','calc.py',413),
  ('expression -> expression OR expression','expression',3,'p_expression','calc.py',414),
  ('expression -> expression AND expression','expression',3,'p_expression','calc.py',415),
  ('expression -> expression XOR expression','expression',3,'p_expression','calc.py',416),
  ('expression -> expression LSHIFT expression','expression',3,'p_expression','calc.py',417),
  ('expression -> expression RSHIFT expression','expression',3,'p_expression','calc.py',418),
  ('expression -> expression LOR expression','expression',3,'p_expression','calc.py',419),
  ('expression -> expression LAND expression','expression',3,'p_expression','calc.py',420),
  ('expression -> expression LT expression','expression',3,'p_expression','calc.py',421),
  ('expression -> expression LE expression','expression',3,'p_expression','calc.py',422),
  ('expression -> expression GT expression','expression',3,'p_expression','calc.py',423),
  ('expression -> expression GE expression','expression',3,'p_expression','calc.py',424),
  ('expression -> expression EQ expression','expression',3,'p_expression','calc.py',425),
  ('expression -> expression NE expression','expression',3,'p_expression','calc.py',426),
  ('statement -> NAME EQUALS expression SEMICOLON','statement',4,'p_statement_assign','calc.py',431),
  ('statement -> NAME TIMESEQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',432),
  ('statement -> NAME DIVEQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',433),
  ('statement -> NAME MODEQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',434),
  ('statement -> NAME PLUSEQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',435),
  ('statement -> NAME MINUSEQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',436),
  ('statement -> NAME LSHIFTEQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',437),
  ('statement -> NAME RSHIFTEQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',438),
  ('statement -> NAME ANDEQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',439),
  ('statement -> NAME OREQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',440),
  ('statement -> NAME XOREQUAL expression SEMICOLON','statement',4,'p_statement_assign','calc.py',441),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',446),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',451),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',456),
  ('expression -> STRING','expression',1,'p_expression_string','calc.py',461),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',466),
]
