
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE EQUALS LPAREN MINUS NAME NUMBER PLUS RPAREN SEMICOLON TIMESstatement : statement expression SEMICOLON\n                 | expression SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionstatement : NAME EQUALS expression SEMICOLONexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,1,4,5,9,10,11,12,13,14,17,24,],[3,8,8,8,-2,8,8,8,8,8,-1,-7,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[4,4,11,-11,4,4,-10,11,-11,-2,4,4,4,4,4,-8,11,-1,-3,-4,-5,-6,11,-9,-7,]),'LPAREN':([0,1,4,5,9,10,11,12,13,14,17,24,],[5,5,5,5,-2,5,5,5,5,5,-1,-7,]),'NUMBER':([0,1,4,5,9,10,11,12,13,14,17,24,],[6,6,6,6,-2,6,6,6,6,6,-1,-7,]),'$end':([1,9,17,24,],[0,-2,-1,-7,]),'SEMICOLON':([2,3,6,7,8,15,18,19,20,21,22,23,],[9,-11,-10,17,-11,-8,-3,-4,-5,-6,24,-9,]),'PLUS':([2,3,6,7,8,15,16,18,19,20,21,22,23,],[10,-11,-10,10,-11,-8,10,-3,-4,-5,-6,10,-9,]),'TIMES':([2,3,6,7,8,15,16,18,19,20,21,22,23,],[12,-11,-10,12,-11,-8,12,12,12,-5,-6,12,-9,]),'DIVIDE':([2,3,6,7,8,15,16,18,19,20,21,22,23,],[13,-11,-10,13,-11,-8,13,13,13,-5,-6,13,-9,]),'EQUALS':([3,],[14,]),'RPAREN':([6,8,15,16,18,19,20,21,23,],[-10,-11,-8,23,-3,-4,-5,-6,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,1,4,5,10,11,12,13,14,],[2,7,15,16,18,19,20,21,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> statement expression SEMICOLON','statement',3,'p_statement_expr','calc.py',72),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','calc.py',73),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',83),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',84),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',85),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',86),
  ('statement -> NAME EQUALS expression SEMICOLON','statement',4,'p_statement_assign','calc.py',94),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',102),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',107),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',112),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',117),
]
